    1  ssh ec2-user@linux.itcareerhub.de
    2  ssh ec2-user@linux.itcareerhub.de
    3  scp ec2-user@linux.itcareerhub.de:/opt/260824-wde/Elena_Yailo/myfirstbushscript.txt C:/test_HW9Linux/myfirstbushscript.txt
    4  ssh ec2-user@linux.itcareerhub.de
    5  scp ec2-user@linux.itcareerhub.de:/opt/260824-wde/Elena_Yailo/myfirstbashscript.txt C:/test_HW9Linux/myfirstbashscript.txt
    6  scp ec2-user@linux.itcareerhub.de:/opt/260824-wde/Elena_Yailo/myfirstbashscript.txt C:/Homeworks-LINUX/myfirstbashscript.txt
    7  scp ec2-user@linux.itcareerhub.de:/opt/260824-wde/Elena_Yailo/myfirstbashscript.txt C:/Homeworks-LINUX/
    8  scp ec2-user@linux.itcareerhub.de:/opt/260824-wde/Elena_Yailo/myfirstbashscript.txt /Homeworks-LINUX/
    9  scp ec2-user@linux.itcareerhub.de:/opt/260824-wde/Elena_Yailo/myfirstbashscript.txt Homeworks-LINUX/
   10  scp ec2-user@linux.itcareerhub.de:/opt/260824-wde/Elena_Yailo/myfirstbashscript.txt C:/homeworksLinuks/
   11  scp ec2-user@linux.itcareerhub.de:/opt/260824-wde/Elena_Yailo/myfirstbashscript.txt C:/homeworksLinux/
   12  scp ec2-user@linux.itcareerhub.de:/opt/260824-wde/Elena_Yailo/myfirstbashscript.txt C:/HomeworksLinux/
   13  git clone git@github.com:Yailo-Elena/git-branch.git
   14  ls -la
   15  cd git-branch
   16  git init
   17  echo "Основы Linux
   18  Терминал
   19  Работа с командной строкой - не такая страшная задача, как вы могли бы подумать. Чтобы использовать командную строку не требуется специальных знаний, так как это такая же программа, как и все остальные. Большинство задач в Linux можно выполнить в командной строке. И хотя для большинства программ существуют графические утилиты, иногда их просто недостаточно. Здесь и используется командная строка.
   20  Терминал часто называют командной строкой или оболочкой. В далекие дни пользователи общались с компьютером именно так; и тем не менее пользователи Linux находят, что использование терминала может быть быстрее графического метода. Сейчас вы узнаете как пользоваться терминалом.
   21  Изначально терминал использовали в качестве браузера файлов и он действительно все еще используется в этой роли. Вы можете использовать терминал в качестве браузера файлов, добраться до ваших файлов и отменить сделанные изменения.
   22  Запуск Терминала
   23  Приложение Konsole можно запустить, выбрав K-меню->System->Konsole (Terminal Program) из меню рабочего стола.
   24  Основные Команды
   25  Просмотр каталогов и файлов: - ls
   26  Команда ls (LiSt) показывает список файлов разными цветами с полным форматированием текста.
   27  Создание каталогов - mkdir (имя каталога)
   28  Приложение mkdir (MaKeDIRectory) создает каталог.
   29  Смена каталога: - cd (/адрес/каталога)
   30  Приложение cd (Change Directory - сменить каталог) изменяет ваш текущий каталог на указанный вами.
   31  Копирование файла и/или каталога: - cp (имя файла или каталога) (в: имя каталога или файла)
   32  Команда cp (CoPy) копирует любой выбранный файл. Команда cp -r копирует любой выбранный каталог со всем содержимым.
   33  Удаление файлов и/или каталогов: - rm (имя файла или каталога)
   34  Команда rm (ReMove) удаляет любой указанный вами файл. Команда rm -r удаляет любой указанный вами каталог со всем содержимым.
   35  Перемещение/Переименование Файлов/Каталогов: - mv (имя файла или каталога)
   36  Команда mv (MoVe) перемещает/переименовывает любой указанный вами файл или каталог
   37  Поиск файлов/каталогов: - locate (имя файла или каталога)
   38  Команда locate ищет файлы по указанному вами имени. Она использует индекс файлов на вашей системе, чтобы работать быстро. Чтобы обновить этот индекс, выполните команду sudo updatedb. Эта команда выполняется автоматически каждый день, если вы оставляете включенным ваш компьютер. Ее необходимо выполнять с административными привилегиями.
   39  Вы также можете использовать маски в именах файлов и каталогов, чтобы указать более одного файла, такие как "*" (совпадение со всеми символами) или "?" (совпадение с одним символом).
   40  Переключение в консольный режим
   41  Для доступа к командной строке в Kubuntu обычно запускают терминал (см. «Запуск Терминала» выше), тем не менее иногда полезно переключиться в настоящую консоль:
   42  Чтобы переключиться на первую консоль используйте комбинацию клавиш Ctrl-Alt-F1.
   43  Чтобы переключиться обратно к рабочему столу, используйте комбинацию клавиш Ctrl-Alt-F7.
   44  Замечание
   45  Доступно шесть консолей. К каждой из них можно получить доступ с помощью комбинации клавиш: от Ctrl-Alt-F1 до Ctrl-Alt-F6" >> git-branch
   46  git status
   47  echo "" > git branch
   48  ls -la
   49  rm git-branch
   50  ls -la
   51  echo "Основы Linux
   52  Терминал
   53  Работа с командной строкой - не такая страшная задача, как вы могли бы подумать. Чтобы использовать командную строку не требуется специальных знаний, так как это такая же программа, как и все остальные. Большинство задач в Linux можно выполнить в командной строке. И хотя для большинства программ существуют графические утилиты, иногда их просто недостаточно. Здесь и используется командная строка.
   54  Терминал часто называют командной строкой или оболочкой. В далекие дни пользователи общались с компьютером именно так; и тем не менее пользователи Linux находят, что использование терминала может быть быстрее графического метода. Сейчас вы узнаете как пользоваться терминалом.
   55  Изначально терминал использовали в качестве браузера файлов и он действительно все еще используется в этой роли. Вы можете использовать терминал в качестве браузера файлов, добраться до ваших файлов и отменить сделанные изменения.
   56  Запуск Терминала
   57  Приложение Konsole можно запустить, выбрав K-меню->System->Konsole (Terminal Program) из меню рабочего стола.
   58  Основные Команды
   59  Просмотр каталогов и файлов: - ls
   60  Команда ls (LiSt) показывает список файлов разными цветами с полным форматированием текста.
   61  Создание каталогов - mkdir (имя каталога)
   62  Приложение mkdir (MaKeDIRectory) создает каталог.
   63  Смена каталога: - cd (/адрес/каталога)
   64  Приложение cd (Change Directory - сменить каталог) изменяет ваш текущий каталог на указанный вами.
   65  Копирование файла и/или каталога: - cp (имя файла или каталога) (в: имя каталога или файла)
   66  Команда cp (CoPy) копирует любой выбранный файл. Команда cp -r копирует любой выбранный каталог со всем содержимым.
   67  Удаление файлов и/или каталогов: - rm (имя файла или каталога)
   68  Команда rm (ReMove) удаляет любой указанный вами файл. Команда rm -r удаляет любой указанный вами каталог со всем содержимым.
   69  Перемещение/Переименование Файлов/Каталогов: - mv (имя файла или каталога)
   70  Команда mv (MoVe) перемещает/переименовывает любой указанный вами файл или каталог
   71  Поиск файлов/каталогов: - locate (имя файла или каталога)
   72  Команда locate ищет файлы по указанному вами имени. Она использует индекс файлов на вашей системе, чтобы работать быстро. Чтобы обновить этот индекс, выполните команду sudo updatedb. Эта команда выполняется автоматически каждый день, если вы оставляете включенным ваш компьютер. Ее необходимо выполнять с административными привилегиями.
   73  Вы также можете использовать маски в именах файлов и каталогов, чтобы указать более одного файла, такие как "*" (совпадение со всеми символами) или "?" (совпадение с одним символом).
   74  Переключение в консольный режим
   75  Для доступа к командной строке в Kubuntu обычно запускают терминал (см. «Запуск Терминала» выше), тем не менее иногда полезно переключиться в настоящую консоль:
   76  Чтобы переключиться на первую консоль используйте комбинацию клавиш Ctrl-Alt-F1.
   77  Чтобы переключиться обратно к рабочему столу, используйте комбинацию клавиш Ctrl-Alt-F7.
   78  Замечание
   79  Доступно шесть консолей. К каждой из них можно получить доступ с помощью комбинации клавиш: от Ctrl-Alt-F1 до Ctrl-Alt-F6" >> file.txt
   80  ls -la
   81  git status
   82  git add file.txt
   83  git commit -m "Added new file.txt"
   84  git status
   85  git log
   86  ls -la
   87  git status
   88  git chekout -b newbranch
   89  git checkout -b newbranch
   90  git branch -d newbranch
   91  git branch -D newbranch
   92  git checkout main
   93  git branch -d newbranch
   94  git checkout -b gitignore
   95  nano .gitignore
   96  git status
   97  nano .gitignore
   98  git status
   99  nano .gitignore
  100  git status
  101  git add .gitignore
  102  git commit -m "Added file .gitignore"
  103  git status
  104  ls -la
  105  git log
  106  git branch
  107  git checkout main
  108  git log
  109  git checkout gitignore
  110  ls -la
  111  git push
  112  git push --set-upstream origin gitignore
  113  ls -la
  114  git checkout main
  115  ls -la
  116  nano .gitignore
  117  git status
  118  git add .gitignore
  119  git commit -m "Added new file .gitignore"
  120  git push
  121  git checkout gitignore
  122  ls -la
  123  git status
  124  git log
  125  git clone git@github.com:Yailo-Elena/my_repository1.git
  126  git checkout -b feature
  127  cd my_repository1/
  128  git checkout -b feature
  129  nano README.md
  130  ls -la
  131  nano .gitignore
  132  git add README.md .gitignore 
  133  git commit -m "Added new files README.md and .gitignore"
  134  git status
  135  git push
  136  git push --set-upstream origin feature
  137  git commit --amend -m "Added new files README.md and .gitignore (amend)"
  138  git push --force
  139  git checkout main
  140  git merge feature
  141  git push origin main
  142  history > history.txt
